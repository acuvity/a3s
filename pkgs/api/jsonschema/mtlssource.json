{
  "$extends": [
    "@sharded",
    "@identifiable",
    "@importable",
    "@timed",
    "@claimfilter"
  ],
  "$friendlyName": "MTLSSource",
  "$friendlyNamePlural": "MTLSSources",
  "$modelName": "MTLSSource",
  "$modelPackage": "a3s",
  "$modelResourceName": "mtlssources",
  "$modelRestName": "mtlssource",
  "additionalProperties": false,
  "description": "An MTLS Auth source can be used to issue tokens based on user certificates.",
  "properties": {
    "CA": {
      "$friendlyName": "CA",
      "$required": true,
      "description": "The Certificate authority to use to validate user certificates in PEM format.",
      "title": "CA",
      "type": "string"
    },
    "ID": {
      "$friendlyName": "ID",
      "$readOnly": true,
      "description": "ID is the identifier of the object.",
      "title": "ID",
      "type": [
        "string",
        "null"
      ]
    },
    "claimsRetrievalMode": {
      "$defaultValue": "X509",
      "$friendlyName": "Claims Retrieval Mode",
      "description": "Defines if and how you want to enable auto login with client certificates.  For Entra, you will need to set clientTenantID, clientID and clientSecret.  You will also need an Entra application that has the following permissions:  - Directory.Read.All - User.Read  For now, only Entra is supported.",
      "enum": [
        "Entra",
        "X509"
      ],
      "title": "claimsRetrievalMode"
    },
    "clientID": {
      "$friendlyName": "Client ID",
      "description": "The oauth clientID if any. This may be required for autologin, depending on the mode.",
      "title": "clientID",
      "type": [
        "string",
        "null"
      ]
    },
    "clientSecret": {
      "$friendlyName": "Client Secret",
      "$required": true,
      "description": "Client secret associated with the client ID. This may be required for autologin, depending on the mode.",
      "title": "clientSecret",
      "type": "string"
    },
    "clientTenantID": {
      "$friendlyName": "Client Tenant ID",
      "description": "ID of the tenant for the identity provider, if any. This may be required for autologin, depending on the mode.",
      "title": "clientTenantID",
      "type": [
        "string",
        "null"
      ]
    },
    "createTime": {
      "$friendlyName": "CreateTime",
      "$readOnly": true,
      "description": "Creation date of the object.",
      "title": "createTime",
      "type": [
        "string",
        "null"
      ]
    },
    "description": {
      "$friendlyName": "Description",
      "description": "The description of the object.",
      "title": "description",
      "type": [
        "string",
        "null"
      ]
    },
    "fingerprints": {
      "$friendlyName": "Fingerprints",
      "$readOnly": true,
      "description": "The fingerprint of the CAs in the chain.",
      "items": {
        "type": [
          "string",
          "null"
        ]
      },
      "title": "fingerprints",
      "type": "array"
    },
    "ignoredKeys": {
      "$friendlyName": "IgnoredKeys",
      "description": "A list of claims that will be filtered out from the identity token. A claim will be ignored if it is prefixed with one of the items in the ignoredKeys list. This runs before includedKeys computation.",
      "items": {
        "type": [
          "string",
          "null"
        ]
      },
      "title": "ignoredKeys",
      "type": "array"
    },
    "importHash": {
      "$creationOnly": true,
      "$friendlyName": "ImportHash",
      "description": "The hash of the structure used to compare with new import version.",
      "title": "importHash",
      "type": [
        "string",
        "null"
      ]
    },
    "importLabel": {
      "$creationOnly": true,
      "$friendlyName": "ImportLabel",
      "description": "The user-defined import label that allows the system to group resources from the same import operation.",
      "title": "importLabel",
      "type": [
        "string",
        "null"
      ]
    },
    "includedKeys": {
      "$friendlyName": "IncludedKeys",
      "description": "A list of claims that defines which claims will be added to the identity token. A claim will be included if it is prefixed with one of the items in the includedKeys list. This runs after ignoreddKeys computation.",
      "items": {
        "type": [
          "string",
          "null"
        ]
      },
      "title": "includedKeys",
      "type": "array"
    },
    "modifier": {
      "$friendlyName": "Modifier",
      "$ref": "identitymodifier.json",
      "description": "Contains optional information about a remote service that can be used to modify the claims that are about to be delivered using this authentication source.",
      "title": "modifier"
    },
    "name": {
      "$friendlyName": "Name",
      "$required": true,
      "description": "The name of the source.",
      "title": "name",
      "type": "string"
    },
    "namespace": {
      "$friendlyName": "Namespace",
      "$readOnly": true,
      "description": "The namespace of the object.",
      "title": "namespace",
      "type": [
        "string",
        "null"
      ]
    },
    "principalUserX509Field": {
      "$defaultValue": "Email",
      "$friendlyName": "Principal User X.509 Field",
      "description": "The X.509 field to look for to extract the user principal name.",
      "enum": [
        "CommonName",
        "Email"
      ],
      "title": "principalUserX509Field"
    },
    "subjectKeyIDs": {
      "$friendlyName": "SubjectKeyIDs",
      "$readOnly": true,
      "description": "Value of the CAs X.509 SubjectKeyIDs in the chain.",
      "items": {
        "type": [
          "string",
          "null"
        ]
      },
      "title": "subjectKeyIDs",
      "type": "array"
    },
    "updateTime": {
      "$friendlyName": "UpdateTime",
      "$readOnly": true,
      "description": "Last update date of the object.",
      "title": "updateTime",
      "type": [
        "string",
        "null"
      ]
    }
  },
  "required": [
    "CA",
    "clientSecret",
    "name"
  ],
  "title": "MTLSSource",
  "type": "object"
}